apiVersion: v1
kind: Secret
metadata:
  name: postgres
data:
  username: cG9zdGdyZXM=
  password: bXlzZWNyZXRwYXNzd29yZA==
  database-name: c2hvcHBpbmctbGlzdA==
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
  name: postgresql
spec:
  ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: postgresql
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    description: Deployment Config for a postgresql db
    template.alpha.openshift.io/wait-for-ready: "true"
  name: postgresql
spec:
  replicas: 1
  selector:
    name: postgresql
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: postgresql
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postgres
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: postgres
          name: postgresql
          image: docker-registry.default.svc:5000/openshift/postgresql@sha256:6e40707a46de19f6a0e51e9bfad6921cfde51cf074931654a5d2439410f58dc7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: postgresql-data
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: openshift
    - type: ConfigChange
---
apiVersion: v1
kind: Route
metadata:
  name: postgresql
spec:
  to:
    kind: Service
    name: postgresql

